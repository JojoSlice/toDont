name: Build React Client on PR

on:
  pull_request:
    paths:
      - "klient/**"
      - "!klient/README.md"
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: RÃ¤kna Ã¤ndrade filer och rader
        id: stats
        shell: bash
        run: |
          git fetch origin ${{ github.base_ref }}

          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '^klient/' | wc -l)
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT

          CHANGED_LINES=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | grep '^.*klient/' | awk '{sum+=$1+$2} END {print sum}')
          echo "changed_lines=${CHANGED_LINES:-0}" >> $GITHUB_OUTPUT

          TS_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(ts|tsx)$' | wc -l)
          echo "ts_files=$TS_FILES" >> $GITHUB_OUTPUT

      - name: Visa statistik
        shell: bash
        run: |
          echo "ðŸ“Š Statistik fÃ¶r React-projektet:"
          echo "================================"
          echo "Ã„ndrade filer: ${{ steps.stats.outputs.changed_files }}"
          echo "Ã„ndrade rader: ${{ steps.stats.outputs.changed_lines }}"
          echo "TypeScript/TSX filer: ${{ steps.stats.outputs.ts_files }}"
          echo "================================"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: klient/package-lock.json

      - name: Install dependencies
        working-directory: ./klient
        run: npm ci

      - name: Run ESLint
        working-directory: ./klient
        run: npm run lint

      - name: Run TypeScript type check
        working-directory: ./klient
        run: npx tsc -b --noEmit

      - name: Build project
        working-directory: ./klient
        run: npm run build

      - name: Byggresultat
        if: success()
        shell: bash
        run: |
          echo "âœ… Build lyckades pÃ¥ ${{ matrix.os }}!"
          echo "Ã„ndrade ${{ steps.stats.outputs.changed_files }} filer med ${{ steps.stats.outputs.changed_lines }} rader"

      - name: Kommentera pÃ¥ PR
        if: success() && matrix.os == 'ubuntu-latest'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“Š React Build Statistik\n\n` +
                    `âœ… Build lyckades pÃ¥ bÃ¥de Windows och Linux!\n\n` +
                    `### Ã„ndringar i denna PR:\n` +
                    `- **Ã„ndrade filer:** ${{ steps.stats.outputs.changed_files }}\n` +
                    `- **Ã„ndrade rader:** ${{ steps.stats.outputs.changed_lines }}\n` +
                    `- **TypeScript/TSX filer:** ${{ steps.stats.outputs.ts_files }}\n\n` +
                    `âœ¨ ESLint: Inga fel\n` +
                    `âœ¨ TypeScript: Inga typfel\n` +
                    `âœ¨ Build: Lyckades`
            })
